{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/marked/lib/marked.js","webpack:///./src/markdown-example.txt","webpack:///(webpack)/buildin/global.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","Lexer","options","this","tokens","links","marked","defaults","rules","normal","gfm","tables","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","merge","lex","src","token","top","next","loose","cap","bull","b","space","tag","isordered","exec","substring","length","push","type","pedantic","lang","depth","header","split","align","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","sanitize","pre","sanitizer","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","encode","unescape","_","String","fromCharCode","parseInt","regex","opt","val","resolveUrl","base","baseUrls","_scheme","_email","_inside","_href","_backpedal","output","out","mangle","inLink","outputLink","codespan","trim","smartypants","image","ch","Math","random","toString","escaped","highlight","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","e","baseUrl","originIndependentUrl","parse","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","obj","target","key","arguments","callback","pending","done","err","message","silent","setOptions","parser","lexer","inlineLexer","window","g","Function","eval","editor","document","getElementById","preview","slider","marked__WEBPACK_IMPORTED_MODULE_0___default","a","markdownOptions","headerIds","previewMarkdown","innerHTML","landscape","matchMedia","matches","prevMode","prevWidth","prevHeight","clicked","startX","startY","changeRatio","shiftX","shiftY","width","getComputedStyle","documentElement","getPropertyValue","newWidth","parseFloat","style","setProperty","height","newHeight","resize","clientX","offsetWidth","clientY","offsetHeight","focus","addEventListener","_markdown_example_txt__WEBPACK_IMPORTED_MODULE_1___default","cursor","slideStarted","preventDefault","textSelection"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = edit(block.html)\n  .replace('comment', /<!--[\\s\\S]*?-->/)\n  .replace('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  .replace('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>\\s]*)*?\\/?>/)\n  .replace(/tag/g, block._tag)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', '<' + block._tag)\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      space,\n      i,\n      tag,\n      l,\n      isordered;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : ''\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase();\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/\\s]*)*?\\/?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex()\n\ninline._inside = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = edit(inline.link)\n  .replace('inside', inline._inside)\n  .replace('href', inline._href)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('inside', inline._inside)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href),\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer(),\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","module.exports = \"# Welcome to my React Markdown Previewer!\\r\\n\\r\\n## This is a sub-heading...\\r\\n### And here's some other cool stuff:\\r\\n  \\r\\nHeres some code, `<div></div>`, between 2 backticks.\\r\\n\\r\\n```\\r\\n// this is multi-line code:\\r\\n\\r\\nfunction anotherExample(firstLine, lastLine) {\\r\\n  if (firstLine == '```' && lastLine == '```') {\\r\\n    return multiLineCode;\\r\\n  }\\r\\n}\\r\\n\\r\\n// long line for testing\\r\\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\\r\\n\\r\\n```\\r\\n  \\r\\nYou can also make text **bold**... whoa!\\r\\nOr _italic_.\\r\\nOr... wait for it... **_both!_**\\r\\nAnd feel free to go crazy ~~crossing stuff out~~.\\r\\n\\r\\nThere's also [links](https://www.freecodecamp.com), and\\r\\n> Block Quotes!\\r\\n\\r\\nAnd if you want to get really crazy, even tables:\\r\\n\\r\\nWild Header | Crazy Header | Another Header?\\r\\n------------ | ------------- | ------------- \\r\\nYour content can | be here, and it | can be here....\\r\\nAnd here. | Okay. | I think we get it.\\r\\n\\r\\n- And of course there are lists.\\r\\n  - Some are bulleted.\\r\\n     - With different indentation levels.\\r\\n        - That look like this.\\r\\n\\r\\n\\r\\n1. And there are numbererd lists too.\\r\\n1. Use just 1s if you want! \\r\\n1. But the list goes on...\\r\\n- Even if you use dashes or asterisks.\\r\\n* And last but not least, let's not forget embedded images:\\r\\n\\r\\n![React Logo w/ Text](https://goo.gl/Umyytc)\\r\\n\"","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import marked from 'marked';\r\nimport example from './markdown-example.txt';\r\nimport './style.css';\r\n\r\nconst editor = document.getElementById('editor');\r\nconst preview = document.getElementById('preview');\r\nconst slider = document.getElementById('slider');\r\n\r\nconst renderer = new marked.Renderer();\r\nrenderer.link = (href, title, text) =>\r\n  `<a\r\n    target=\"_blank\"\r\n    href=\"${href}\"\r\n    ${title ? `title=\"${title}\"` : ''}\r\n  >${text}</a>`;\r\n\r\nconst markdownOptions = {\r\n  headerIds: false,\r\n  gfm: true,\r\n  breaks: true,\r\n  renderer,\r\n};\r\n\r\nfunction previewMarkdown() {\r\n  const text = editor.value;\r\n  preview.innerHTML = marked(text, markdownOptions);\r\n}\r\n\r\nfunction displayExample() {\r\n  editor.value = example;\r\n  previewMarkdown();\r\n}\r\n\r\nlet landscape = window.matchMedia('(orientation: landscape)').matches;\r\nlet prevMode = landscape;\r\nlet prevWidth;\r\nlet prevHeight;\r\n\r\nfunction keepRatio() {\r\n  landscape = window.matchMedia('(orientation: landscape)').matches;\r\n  if (prevMode !== landscape) {\r\n    document.documentElement.style.setProperty('--editor-width', prevHeight);\r\n    document.documentElement.style.setProperty('--editor-height', prevWidth);\r\n  }\r\n  prevMode = landscape;\r\n  prevWidth = getComputedStyle(document.documentElement).getPropertyValue('--editor-width');\r\n  prevHeight = getComputedStyle(document.documentElement).getPropertyValue('--editor-height');\r\n}\r\n\r\nlet clicked = false;\r\nlet startX;\r\nlet startY;\r\n\r\nfunction slideStarted(e) {\r\n  clicked = true;\r\n  startX = e.clientX;\r\n  startY = e.clientY;\r\n  if (landscape) {\r\n    document.body.style.cursor = 'ew-resize';\r\n    editor.style.cursor = 'ew-resize';\r\n  } else {\r\n    document.body.style.cursor = 'ns-resize';\r\n    editor.style.cursor = 'ns-resize';\r\n  }\r\n}\r\n\r\nfunction slideEnded() {\r\n  clicked = false;\r\n  document.body.style.cursor = 'auto';\r\n  editor.style.cursor = 'auto';\r\n}\r\n\r\nfunction resize(shiftX, shiftY) {\r\n  landscape = window.matchMedia('(orientation: landscape)').matches;\r\n  if (landscape) {\r\n    const width = window.getComputedStyle(document.documentElement).getPropertyValue('--editor-width');\r\n    const newWidth = `${parseFloat(width) + shiftX}%`;\r\n    document.documentElement.style.setProperty('--editor-width', newWidth);\r\n  } else {\r\n    const height = window.getComputedStyle(document.documentElement).getPropertyValue('--editor-height');\r\n    const newHeight = `${parseFloat(height) + shiftY}%`;\r\n    document.documentElement.style.setProperty('--editor-height', newHeight);\r\n  }\r\n}\r\n\r\nfunction changeRatio(e) {\r\n  if (clicked) {\r\n    const shiftX = ((e.clientX - startX) / document.body.offsetWidth) * 100;\r\n    const shiftY = ((e.clientY - startY) / document.body.offsetHeight) * 100;\r\n    resize(shiftX, shiftY);\r\n    startX = e.clientX;\r\n    startY = e.clientY;\r\n  }\r\n}\r\n\r\nfunction textSelection(e) {\r\n  if (clicked) e.preventDefault();\r\n}\r\n\r\neditor.focus();\r\neditor.addEventListener('keyup', previewMarkdown);\r\nwindow.addEventListener('load', displayExample);\r\n\r\nwindow.addEventListener('resize', keepRatio);\r\nslider.addEventListener('mousedown', e => slideStarted(e));\r\nwindow.addEventListener('mouseup', slideEnded);\r\nwindow.addEventListener('mousemove', e => changeRatio(e));\r\nwindow.addEventListener('selectstart', e => textSelection(e));\r\n"],"sourceRoot":""}